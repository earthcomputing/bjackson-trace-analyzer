
--

VERBS:

cellagent.rs$listen_pe
cellagent.rs$listen_uptree
cellagent.rs$port_connected
datacenter.rs$initialize
nalcell.rs$new
nalcell.rs$start_cell
nalcell.rs$start_packet_engine
packet_engine.rs$forward
packet_engine.rs$listen_ca
packet_engine.rs$listen_port

--

SCHEMA:

    OBJECT { trace_header module function - cell_id comment }
    OBJECT { trace_header module function - cell_id comment sender_id vm_id }
    OBJECT { trace_header module function - cell_id is_border port_no }
    OBJECT { trace_header module function - cell_id msg }
    OBJECT { trace_header module function - cell_id msg port_nos tree_id }
    OBJECT { trace_header module function - cell_id msg_type port_nos tree_id }
    OBJECT { trace_header module function - left_cell left_port link_id rite_cell rite_port }
    OBJECT { trace_header module function - cell_number comment }

--

METADATA:

    /module : STRING
    /function : STRING
    /trace_header/trace_type : STRING # Trace, Debug
    /trace_header/thread_id : NUMBER
    /trace_header/event_id[] : SEQ OF NUMBER

--

FORM #1: OBJECT { trace_header module function - cell_id comment }

    /cell_id : NAME_TYPE
    /comment : STRING

packet_engine.rs$listen_ca - "Starting listen CA"
cellagent.rs$listen_pe - "Starting listen PE"
packet_engine.rs$listen_port - "Starting listen ports"
nalcell.rs$start_cell - "starting cell agent"
nalcell.rs$start_packet_engine - "starting packet engine"

--

FORM #2: OBJECT { trace_header module function - cell_id comment sender_id vm_id }

    /cell_id : NAME_TYPE
    /comment : STRING
    /sender_id : NAME_TYPE
    /vm_id : NAME_TYPE

cellagent.rs$listen_uptree - "Start listening to VM"

"sender_id":{"name":"Sender:C:0+VM:C:0+vm1", ... },
"vm_id":{"name":"VM:C:0+vm1", ... }

--

FORM #3: OBJECT { trace_header module function - cell_id is_border port_no }

    /cell_id : NAME_TYPE
    /is_border : BOOLEAN
    /port_no/v : NUMBER

cellagent.rs$port_connected

--

FORM #4: OBJECT { trace_header module function - cell_id msg }

    /cell_id : NAME_TYPE
    /msg : OBJECT { header payload }

cellagent.rs$listen_pe_loop

--

FORM #5: OBJECT { trace_header module function - cell_id msg port_nos tree_id }

    /cell_id : NAME_TYPE
    /msg : OBJECT { header payload }
    /port_nos[] : SEQ OF OBJECT { v }
    /port_nos[]/v : NUMBER
    /tree_id : NAME_TYPE

cellagent.rs$listen_pe_loop
cellagent.rs$send_msg

--

FORM #6: OBJECT { trace_header module function - cell_id msg_type port_nos tree_id }

    /cell_id : NAME_TYPE
    /msg_type : STRING # Application, DiscoverD, Manifest, StackTree, StackTreeD
    /port_nos[] : SEQ OF OBJECT { v }
    /port_nos[]/v : NUMBER
    /tree_id : NAME_TYPE

packet_engine.rs$forward

tree_id":{"name":"C:2",...},
tree_id":{"name":"C:2+NocAgentDeploy",...},
tree_id":{"name":"C:2+NocAgentMaster",...},
tree_id":{"name":"C:2+NocMasterAgent",...},
tree_id":{"name":"C:2+NocMasterDeploy",...},

--

FORM #7: OBJECT { trace_header module function - link_id left_cell left_port rite_cell rite_port }

    /link_id : NAME_TYPE
    /left_cell : NAME_TYPE
    /left_port/v : NUMBER
    /rite_cell : NAME_TYPE
    /rite_port/v : NUMBER

--

FORM #8: OBJECT { trace_header module function - cell_number comment }

    /cell_number : NUMBER
    /comment : STRING

--

NAME_TYPE:

    /.../name
    /.../uuid/uuid[] : SEQ 2 OF NUMBER

--

    /msg : OBJECT { header payload }
    /msg/header : OBJECT { direction msg_count msg_type sender_id tree_map }
    /msg/header/direction : STRING # Leafward, Rootward
    /msg/header/msg_count : NUMBER
    /msg/header/msg_type : STRING # StackTree, Manifest, StackTreeD, Application, DiscoverD
    /msg/header/sender_id : NAME_TYPE
    /msg/header/tree_map : OBJECT {  }
    /msg/header/tree_map : OBJECT { NocAgentMaster NocMasterAgent }
    /msg/header/tree_map/NocAgentMaster : NAME_TYPE
    /msg/header/tree_map/NocMasterAgent : NAME_TYPE

    /msg/payload : OBJECT { tree_id - body }
    /msg/payload : OBJECT { tree_id - my_index }
    /msg/payload : OBJECT { tree_id - fwd_index index }
    /msg/payload : OBJECT { deploy_tree_id - manifest tree_name }
    /msg/payload : OBJECT { parent_tree_id - gvm_eqn index new_tree_id }

    /msg/payload/body
    /msg/payload/fwd_index
    /msg/payload/index
    /msg/payload/my_index

    /msg/payload/deploy_tree_id : NAME_TYPE
    /msg/payload/new_tree_id : NAME_TYPE
    /msg/payload/parent_tree_id : NAME_TYPE
    /msg/payload/tree_id : NAME_TYPE
    /msg/payload/tree_name : OBJECT { name }
    /msg/payload/tree_name/name : STRING

--

    /.../gvm_eqn : OBJECT { recv_eqn save_eqn send_eqn variables xtnd_eqn }
    /.../gvm_eqn/recv_eqn
    /.../gvm_eqn/save_eqn
    /.../gvm_eqn/send_eqn
    /.../gvm_eqn/xtnd_eqn
    /.../gvm_eqn/variables : ARRAY len=1
    /.../gvm_eqn/variables[] : OBJECT { value var_name var_type }
    /.../gvm_eqn/variables[]/value
    /.../gvm_eqn/variables[]/var_name
    /.../gvm_eqn/variables[]/var_type

--

    /.../manifest : OBJECT { allowed_trees cell_config deployment_tree id trees vms }
    /.../manifest/allowed_trees[]/name
    /.../manifest/cell_config
    /.../manifest/deployment_tree/name
    /.../manifest/id
    /.../manifest/allowed_trees : ARRAY len=2
    /.../manifest/allowed_trees[] : OBJECT { name }
    /.../manifest/deployment_tree : OBJECT { name }
    /.../manifest/trees : ARRAY len=1
    /.../manifest/trees[] : OBJECT { id parent_list }
    /.../manifest/trees[]/parent_list : ARRAY len=1
    /.../manifest/trees[]/id
    /.../manifest/trees[]/parent_list[]
    /.../manifest/vms : ARRAY len=1
    /.../manifest/vms[] : OBJECT { allowed_trees containers id image required_config trees }
    /.../manifest/vms[]/id
    /.../manifest/vms[]/image
    /.../manifest/vms[]/required_config
    /.../manifest/vms[]/allowed_trees : ARRAY len=2
    /.../manifest/vms[]/allowed_trees[] : OBJECT { name }
    /.../manifest/vms[]/allowed_trees[]/name
    /.../manifest/vms[]/containers : ARRAY len=1
    /.../manifest/vms[]/containers[] : OBJECT { allowed_trees id image params }
    /.../manifest/vms[]/containers[]/id
    /.../manifest/vms[]/containers[]/image
    /.../manifest/vms[]/containers[]/allowed_trees : ARRAY len=2
    /.../manifest/vms[]/containers[]/allowed_trees[] : OBJECT { name }
    /.../manifest/vms[]/containers[]/allowed_trees[]/name
    /.../manifest/vms[]/containers[]/params : ARRAY len=0
    /.../manifest/vms[]/trees : ARRAY len=1
    /.../manifest/vms[]/trees[] : OBJECT { id parent_list }
    /.../manifest/vms[]/trees[]/id
    /.../manifest/vms[]/trees[]/parent_list[]
    /.../manifest/vms[]/trees[]/parent_list : ARRAY len=1

--

KEYSET:

856 uuid
428 name
261 module
261 event_id
261 thread_id
261 function
261 trace_header
261 trace_type
228 cell_id
198 v
141 msg_type
141 port_nos
141 tree_id
80 comment
27 is_border
27 port_no
20 cell_number
13 link_id
13 rite_port
13 rite_cell
13 left_cell
13 left_port
10 sender_id
10 vm_id

--
